// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TournamentPlanner.Data;

namespace TournamentPlanner.Migrations
{
    [DbContext(typeof(TournamentPlannerDbContext))]
    [Migration("20220614172756_stage4")]
    partial class stage4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("MatchPlayer", b =>
                {
                    b.Property<int>("MatchesID")
                        .HasColumnType("int");

                    b.Property<int>("PlayersID")
                        .HasColumnType("int");

                    b.HasKey("MatchesID", "PlayersID");

                    b.HasIndex("PlayersID");

                    b.ToTable("MatchPlayer");
                });

            modelBuilder.Entity("TournamentPlanner.Data.Match", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Round")
                        .HasColumnType("int");

                    b.Property<int?>("WinnerId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WinnerId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("TournamentPlanner.Data.Player", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("MatchPlayer", b =>
                {
                    b.HasOne("TournamentPlanner.Data.Match", null)
                        .WithMany()
                        .HasForeignKey("MatchesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TournamentPlanner.Data.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TournamentPlanner.Data.Match", b =>
                {
                    b.HasOne("TournamentPlanner.Data.Player", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerId");

                    b.Navigation("Winner");
                });
#pragma warning restore 612, 618
        }
    }
}
